#!/bin/bash
#SBATCH --job-name=cortex_grid_search
#SBATCH -p gpu_h100
#SBATCH -t 08:00:00
#SBATCH --gpus 1
#SBATCH --output=out/multi_cortex%A_%a.out

set -e

cd ~/projects/astroNNomy/src/


module load 2023
source ~/projects/lofar_venv/bin/activate

# Read the parameter file
PARAM_FILE=astronnomy/training/parameters_augment.txt

# Set default value for SLURM_ARRAY_TASK_ID
SLURM_ARRAY_TASK_ID=${SLURM_ARRAY_TASK_ID:=1}
# Extract the specific line corresponding to the SLURM_ARRAY_TASK_ID
PARAMS=$(sed -n "${SLURM_ARRAY_TASK_ID}p" $PARAM_FILE)

# Parse the parameters
# read model lr dropout_p label_smoothing use_lora rank resize_min resize_max pos_embed <<< $PARAMS

# if [ "$use_lora" -eq 1 ]; then
#     LORA_ARG="--use_lora"
# else
#     LORA_ARG=""
# fi

# if [ "$stochastic_smoothing" -eq 1 ]; then
#     STOCHASTIC_SMOOTHING="--stochastic_smoothing"
# else
#     STOCHASTIC_SMOOTHING=""
# fi

# if [ "$flip_augmentations" -eq 1 ]; then
#     FLIP_AUGMENTATIONS="--flip_augmentations"
# else
#     FLIP_AUGMENTATIONS=""
# fi

# Scale up by 1e6 to convert to integers for comparison
# scaled_lr=$(echo "$lr * 1000000" | awk '{printf("%d", $1)}')
# scaled_threshold=$(echo "4e-05 * 1000000" | awk '{printf("%d", $1)}')

# if [ "$scaled_lr" -le "$scaled_threshold" ]; then
#     EPOCHS="250"
# else
#     EPOCHS="120"
# fi

DATA_INPUT_PATH="/scratch-shared/CORTEX/"
# find $DATA_INPUT_PATH -name '*npz' | xargs -n 1 -P 18 -i rsync -R {} '/dev/shm/'

DATA_PATH="/scratch-shared/CORTEX/public.spider.surfsara.nl/lofarvwf/jdejong/CORTEX/calibrator_selection_robertjan/cnn_data/"

find $DATA_PATH -type f -name "*.npz" | xargs -n 1 -P 8 -i rsync -R {} /dev/shm
find $DATA_PATH -type d -name "_cache" | xargs -n 1 -P 8 -I {} rsync -aR {}/ /dev/shm

DATA_TRAINDATA_PATH="/dev/shm$DATA_PATH"

config_path="astronnomy/training/config.yaml"

# Execute your Python script with the given parameters
cmd="python -m astronnomy.training.train_nn_wandb $config_path dataloader.dataset_root=$DATA_TRAINDATA_PATH $PARAMS reproducibility.seed=43"
echo $cmd
eval $cmd

